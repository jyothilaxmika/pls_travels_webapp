"""Initial schema baseline

Revision ID: 34d7b6aef035
Revises: 
Create Date: 2025-09-19 08:16:56.599831

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '34d7b6aef035'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('driver_locations', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_anonymized', sa.Boolean(), nullable=True))
        batch_op.drop_constraint(batch_op.f('driver_locations_client_event_id_key'), type_='unique')
        batch_op.drop_index(batch_op.f('idx_driver_locations_driver_captured'))
        batch_op.drop_index(batch_op.f('idx_driver_locations_duty_time'))
        batch_op.drop_index(batch_op.f('idx_driver_locations_session_time'))
        batch_op.create_index('idx_driver_locations_driver_captured_desc', ['driver_id', 'captured_at'], unique=False)
        batch_op.create_index('idx_driver_locations_duty_captured', ['duty_id', 'captured_at'], unique=False)
        batch_op.create_index('idx_driver_locations_session_captured', ['tracking_session_id', 'captured_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_driver_locations_is_anonymized'), ['is_anonymized'], unique=False)
        batch_op.create_unique_constraint('uq_driver_event_id', ['driver_id', 'client_event_id'])

    with op.batch_alter_table('duty_schemes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_duty_schemes_requires_approval'), ['requires_approval'], unique=False)

    with op.batch_alter_table('tracking_sessions', schema=None) as batch_op:
        batch_op.create_unique_constraint('uq_active_session_per_duty', ['duty_id', 'driver_id', 'is_active'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('whatsapp_number', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('last_latitude', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('last_longitude', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('last_location_update', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('fcm_token', sa.String(length=512), nullable=True))
        batch_op.add_column(sa.Column('fcm_token_updated', sa.DateTime(), nullable=True))
        batch_op.create_index(batch_op.f('ix_users_whatsapp_number'), ['whatsapp_number'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_whatsapp_number'))
        batch_op.drop_column('fcm_token_updated')
        batch_op.drop_column('fcm_token')
        batch_op.drop_column('last_location_update')
        batch_op.drop_column('last_longitude')
        batch_op.drop_column('last_latitude')
        batch_op.drop_column('whatsapp_number')

    with op.batch_alter_table('tracking_sessions', schema=None) as batch_op:
        batch_op.drop_constraint('uq_active_session_per_duty', type_='unique')

    with op.batch_alter_table('duty_schemes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_duty_schemes_requires_approval'))

    with op.batch_alter_table('driver_locations', schema=None) as batch_op:
        batch_op.drop_constraint('uq_driver_event_id', type_='unique')
        batch_op.drop_index(batch_op.f('ix_driver_locations_is_anonymized'))
        batch_op.drop_index('idx_driver_locations_session_captured')
        batch_op.drop_index('idx_driver_locations_duty_captured')
        batch_op.drop_index('idx_driver_locations_driver_captured_desc')
        batch_op.create_index(batch_op.f('idx_driver_locations_session_time'), ['tracking_session_id', 'captured_at'], unique=False)
        batch_op.create_index(batch_op.f('idx_driver_locations_duty_time'), ['duty_id', 'captured_at'], unique=False)
        batch_op.create_index(batch_op.f('idx_driver_locations_driver_captured'), ['driver_id', 'captured_at'], unique=False)
        batch_op.create_unique_constraint(batch_op.f('driver_locations_client_event_id_key'), ['client_event_id'], postgresql_nulls_not_distinct=False)
        batch_op.drop_column('is_anonymized')

    # ### end Alembic commands ###
