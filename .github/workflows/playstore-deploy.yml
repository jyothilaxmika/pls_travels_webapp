name: Deploy to Play Store

on:
  push:
    tags:
      - 'v*.*.*-release'
  workflow_dispatch:
    inputs:
      track:
        description: 'Play Store track'
        required: true
        default: 'internal'
        type: choice
        options:
        - internal
        - alpha
        - beta
        - production

jobs:
  deploy-playstore:
    name: Deploy to Google Play Store
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
    defaults:
      run:
        working-directory: android_app

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3

    - name: Decode keystore
      run: |
        echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > app/keystore.jks
      env:
        ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

    - name: Create Google Play Service Account Key
      run: |
        echo "${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}" > play-store-service-account.json
      env:
        PLAY_STORE_SERVICE_ACCOUNT_JSON: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}

    - name: Build Release AAB
      run: ./gradlew bundleRelease
      env:
        SIGNING_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        SIGNING_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        SIGNING_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}

    - name: Upload to Play Store
      uses: r0adkll/upload-google-play@v1.1.3
      with:
        serviceAccountJson: android_app/play-store-service-account.json
        packageName: com.plstravels.driver
        releaseFiles: android_app/app/build/outputs/bundle/release/app-release.aab
        track: ${{ github.event.inputs.track || 'internal' }}
        status: completed
        inAppUpdatePriority: 2
        userFraction: 0.5
        whatsNewDirectory: android_app/distribution/whatsnew
        mappingFile: android_app/app/build/outputs/mapping/release/mapping.txt

    - name: Upload AAB artifact
      uses: actions/upload-artifact@v4
      with:
        name: play-store-aab
        path: android_app/app/build/outputs/bundle/release/app-release.aab

    - name: Upload ProGuard mapping
      uses: actions/upload-artifact@v4
      with:
        name: proguard-mapping-playstore
        path: android_app/app/build/outputs/mapping/release/mapping.txt

    - name: Cleanup
      if: always()
      run: |
        rm -f app/keystore.jks
        rm -f play-store-service-account.json